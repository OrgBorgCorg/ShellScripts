name: Mirror to Azure DevOps

on:
  push:
    branches: [main, master, release/**]
    tags:
      - "**"
  delete:
    branches: [main, master, release/**]
    tags:
      - "**"
  create:
    branches: [main, master, release/**]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git
        run: |
          git config --global user.name "OrgBorgCorg"
          git config --global user.email "ivanjaison@gmail.com"

      - name: Fetch only relevant branches
        run: |
          git fetch origin "+refs/heads/main:refs/remotes/origin/main"
          git fetch origin "+refs/heads/master:refs/remotes/origin/master"
          for branch in $(git ls-remote --heads origin | awk '{print $2}' | grep 'refs/heads/release/' | sed 's|refs/heads/||'); do
            git fetch origin "+refs/heads/${branch}:refs/remotes/origin/${branch}"
          done

      - name: Checkout selected branches
        run: |
          for branch in $(git branch -r | grep origin/ | grep -v '\->' | sed 's|origin/||'); do
            git checkout -B "$branch" "origin/$branch"
          done

      - name: Add ADO Remote
        run: |
          git remote add ado https://:${{ secrets.ADO_PAT }}@dev.azure.com/ivanjmadathil/django-admin-jwt-test/_git/ShellScripts || \
          git remote set-url ado https://:${{ secrets.ADO_PAT }}@dev.azure.com/ivanjmadathil/django-admin-jwt-test/_git/ShellScripts

      - name: Get current GitHub branches
        id: github-branches
        run: |
          echo "github_branches=$(git branch -r | grep origin/ | grep -v '\->' | sed 's|origin/||' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

      - name: Get current ADO branches
        id: ado-branches
        run: |
          git fetch ado
          echo "ado_branches=$(git ls-remote --heads ado | awk '{print $2}' | sed 's|refs/heads/||' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

      - name: Delete removed branches from ADO
        run: |
          readarray -t github_branches <<< $(echo '${{ steps.github-branches.outputs.github_branches }}' | jq -r '.[]')
          readarray -t ado_branches <<< $(echo '${{ steps.ado-branches.outputs.ado_branches }}' | jq -r '.[]')
          for branch in "${ado_branches[@]}"; do
            if [[ ! " ${github_branches[@]} " =~ " ${branch} " ]]; then
              echo "Deleting branch $branch from ADO"
              git push ado --delete "$branch"
            fi
          done

      - name: Push selected branches to ADO
        run: |
          for branch in "${github_branches[@]}"; do
            if [[ "$branch" == "main" || "$branch" == "master" || "$branch" == release/* ]]; then
              echo "Pushing $branch to ADO"
              git push ado "$branch:$branch" --force
            fi
          done

      - name: Push tags
        run: git push ado --tags --force

      - name: Show branches pushed to ADO (debug)
        run: git ls-remote --heads ado
